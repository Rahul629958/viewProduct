{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\viewProduct\\\\viewproduct\\\\src\\\\Result.jsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OpenAI = require(\"openai-api\");\nconst apiKey = \"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\";\nconst OPENAI_API_KEY = process.env.apiKey;\nconst openai = new OpenAI(OPENAI_API_KEY);\nfunction Result() {\n  (async () => {\n    const gptResponse = await openai.complete({\n      engine: 'davinci',\n      prompt: 'this is a test',\n      maxTokens: 5,\n      temperature: 0.9,\n      topP: 1,\n      presencePenalty: 0,\n      frequencyPenalty: 0,\n      bestOf: 1,\n      n: 1,\n      stream: false,\n      stop: ['\\n', \"testing\"]\n    });\n    console.log(gptResponse.data);\n  })();\n  const title = \"Currl\";\n  const imgURL = \"https://ph-files.imgix.net/127a103f-c29a-472a-a32d-a53b1fb6e511.png?auto=compress&codec=mozjpeg&cs=strip&auto=format&w=72&h=72&fit=crop&bg=0fff&dpr=1\";\n  const description = \"Currl is a free text-based social bookmarking website. You can collect the links you love from around the web, you can also store them privately or share them publicly with your followers.\";\n  const highlight = \"A free text-based social bookmarking website\";\n  const tags = [\"Social Media\", \"bookmarking\"];\n  const comments = [\"first comment\", \"second comment\"];\n\n  // const titleRating, highlightRating,descriptionRating,tagsRating;\n  // const titleSuggestion,highlightSuggestion, descriptionSuggestion, tagsSuggesting;\n\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: highlight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), tags.map(e => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: e\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), comments.map(e => /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: e\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 27\n    }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 6\n  }, this);\n}\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","ReactDOM","jsxDEV","_jsxDEV","OpenAI","require","apiKey","OPENAI_API_KEY","process","env","openai","Result","gptResponse","complete","engine","prompt","maxTokens","temperature","topP","presencePenalty","frequencyPenalty","bestOf","n","stream","stop","console","log","data","title","imgURL","description","highlight","tags","comments","StrictMode","children","src","fileName","_jsxFileName","lineNumber","columnNumber","map","e","response","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Desktop/viewProduct/viewproduct/src/Result.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst OpenAI = require(\"openai-api\");\r\n\r\n\r\nconst apiKey= \"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\";\r\nconst OPENAI_API_KEY = process.env.apiKey;\r\nconst openai = new OpenAI(OPENAI_API_KEY);\r\n\r\n\r\n\r\n\r\nfunction Result()\r\n{\r\n\r\n\r\n\r\n    (async () => {\r\n        const gptResponse = await openai.complete({\r\n            engine: 'davinci',\r\n            prompt: 'this is a test',\r\n            maxTokens: 5,\r\n            temperature: 0.9,\r\n            topP: 1,\r\n            presencePenalty: 0,\r\n            frequencyPenalty: 0,\r\n            bestOf: 1,\r\n            n: 1,\r\n            stream: false,\r\n            stop: ['\\n', \"testing\"]\r\n        });\r\n    \r\n        console.log(gptResponse.data);\r\n    })();\r\n\r\n\r\n\r\n\r\n    const title = \"Currl\";\r\nconst imgURL= \"https://ph-files.imgix.net/127a103f-c29a-472a-a32d-a53b1fb6e511.png?auto=compress&codec=mozjpeg&cs=strip&auto=format&w=72&h=72&fit=crop&bg=0fff&dpr=1\";\r\nconst description = \"Currl is a free text-based social bookmarking website. You can collect the links you love from around the web, you can also store them privately or share them publicly with your followers.\";\r\nconst highlight =\"A free text-based social bookmarking website\";\r\nconst tags =[\"Social Media\", \"bookmarking\"];\r\nconst comments = [\"first comment\",\"second comment\"];\r\n\r\n// const titleRating, highlightRating,descriptionRating,tagsRating;\r\n// const titleSuggestion,highlightSuggestion, descriptionSuggestion, tagsSuggesting;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n     <React.StrictMode>\r\n        <img src={imgURL}/>\r\n        <h1>{title}</h1>\r\n        <h2>{highlight}</h2>\r\n        {tags.map(e=>(<h3>{e}</h3>))}\r\n        <p>{description}</p>\r\n        {comments.map(e=>(<h5>{e}</h5>))}\r\n        <h1>{response}</h1>\r\n        <button>Analyze</button>\r\n     </React.StrictMode>\r\n    );\r\n}\r\n\r\nexport default Result;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,MAAM,GAAGC,OAAO,CAAC,YAAY,CAAC;AAGpC,MAAMC,MAAM,GAAE,qDAAqD;AACnE,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAAG,CAACH,MAAM;AACzC,MAAMI,MAAM,GAAG,IAAIN,MAAM,CAACG,cAAc,CAAC;AAKzC,SAASI,MAAMA,CAAA,EACf;EAII,CAAC,YAAY;IACT,MAAMC,WAAW,GAAG,MAAMF,MAAM,CAACG,QAAQ,CAAC;MACtCC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE,gBAAgB;MACxBC,SAAS,EAAE,CAAC;MACZC,WAAW,EAAE,GAAG;MAChBC,IAAI,EAAE,CAAC;MACPC,eAAe,EAAE,CAAC;MAClBC,gBAAgB,EAAE,CAAC;MACnBC,MAAM,EAAE,CAAC;MACTC,CAAC,EAAE,CAAC;MACJC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE,CAAC,IAAI,EAAE,SAAS;IAC1B,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAACd,WAAW,CAACe,IAAI,CAAC;EACjC,CAAC,EAAE,CAAC;EAKJ,MAAMC,KAAK,GAAG,OAAO;EACzB,MAAMC,MAAM,GAAE,uJAAuJ;EACrK,MAAMC,WAAW,GAAG,8LAA8L;EAClN,MAAMC,SAAS,GAAE,8CAA8C;EAC/D,MAAMC,IAAI,GAAE,CAAC,cAAc,EAAE,aAAa,CAAC;EAC3C,MAAMC,QAAQ,GAAG,CAAC,eAAe,EAAC,gBAAgB,CAAC;;EAEnD;EACA;;EAWI,oBACC9B,OAAA,CAACH,KAAK,CAACkC,UAAU;IAAAC,QAAA,gBACdhC,OAAA;MAAKiC,GAAG,EAAEP;IAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnBrC,OAAA;MAAAgC,QAAA,EAAKP;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBrC,OAAA;MAAAgC,QAAA,EAAKJ;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACnBR,IAAI,CAACS,GAAG,CAACC,CAAC,iBAAGvC,OAAA;MAAAgC,QAAA,EAAKO;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAE,CAAC,eAC5BrC,OAAA;MAAAgC,QAAA,EAAIL;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBP,QAAQ,CAACQ,GAAG,CAACC,CAAC,iBAAGvC,OAAA;MAAAgC,QAAA,EAAKO;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAE,CAAC,eAChCrC,OAAA;MAAAgC,QAAA,EAAKQ;IAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBrC,OAAA;MAAAgC,QAAA,EAAQ;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAExB;AAACI,EAAA,GAzDQjC,MAAM;AA2Df,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}